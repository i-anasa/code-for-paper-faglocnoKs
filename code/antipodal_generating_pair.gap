# GAP code, see https://www.gap-system.org/
# Checks if a pair of permutations form an
# antipodal generating set for a
# non-orientable surface group of automorphisms 
# acting with signature (0;+;[-];{(2,m,n)})

# input data ###################
# periods
m := 3 ;; n := 12;;

# of order 2
x := (1, 7)(2, 6)(3, 4);;

# of order m
y := (1, 2, 3)(4, 5, 6);;

# mirror reflection
b := (2,3)(4,6);;

# code ###################

# Check orders
ox := Order(x);;
oy := Order(y);;
oxy := Order(x*y);;

if ox = 2 and oy = m and oxy = n then
  orders_match := "are correct";
else
  orders_match := "are not correct";
fi;

Print(" Orders ", orders_match, ": ",
       " o(X) = ", ox,
       "; o(Y) = ", oy,
       "; o(XY)= ", oxy, ".\n\n");;

# group generated by X and Y. Basic info
G := Group([x, y]);;
Print(" |G| = ", Size(G), ".\n");;
Print(" G Is transitive: ", IsTransitive(G), ".\n");
Print(" G Is primitive: ", IsPrimitive(G), ".\n");
Print(" Structure of G: ", StructureDescription(G), ".\n\n");

# check if the mirror reflection b is in G
if b in G then
   Print(" G contains the mirror reflection b.\n");
 else  
   Print(" G does not contain the mirror reflection b.\n");
fi;;
